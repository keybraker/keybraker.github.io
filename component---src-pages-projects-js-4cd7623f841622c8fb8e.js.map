{"version":3,"sources":["webpack:///./src/components/ProjectListing.js","webpack:///./src/components/ProjectListingSection.js","webpack:///./src/pages/projects.js"],"names":["StyledSectionHeading","styled","span","StyledProjectListing","ul","StyledProjectItem","li","StyledProjectLink","Link","StyledLedeSpan","ProjectListing","projectLinks","projects","map","project","key","node","fields","slug","to","frontmatter","title","lede","StyledListingSection","section","ProjectListingSection","sectionTitle","length","ProjectsPageInner","props","allProjects","data","allMdx","edges","personalProjects","filter","projectType","professionalProjects","e","console","log","ProjectsPage","Layout"],"mappings":"kKASMA,EAAuBC,UAAOC,KAAV,0FAAGD,CAAH,qLAcpBE,EAAuBF,UAAOG,GAAV,0FAAGH,CAAH,uCAKpBI,EAAoBJ,UAAOK,GAAV,uFAAGL,CAAH,6DAqBjBM,EAAoBN,kBAAOO,KAAV,uFAAGP,CAAH,MAKjBQ,EAAiBR,UAAOC,KAAV,oFAAGD,CAAH,wBA2BLS,EApBQ,SAAC,GAAkB,IAClCC,EADiC,EAAfC,SACMC,KAAI,SAAAC,GAChC,OACE,kBAACT,EAAD,CAAmBU,IAAKD,EAAQE,KAAKC,OAAOC,MAC1C,kBAAClB,EAAD,KACE,kBAACO,EAAD,CAAmBY,GAAIL,EAAQE,KAAKC,OAAOC,MACxCJ,EAAQE,KAAKI,YAAYC,QAG7B,MACAP,EAAQE,KAAKI,YAAYE,MACxB,kBAACb,EAAD,KAAiBK,EAAQE,KAAKI,YAAYE,UAMlD,OAAO,kBAACnB,EAAD,KAAuBQ,IC1E1BY,EAAuBtB,UAAOuB,QAAV,kGAAGvB,CAAH,wBAgBXwB,EATe,SAAC,GAAgC,IAA9Bb,EAA6B,EAA7BA,SAA6B,EAAnBc,aACzC,OAAOd,EAASe,OAAS,EACvB,kBAACJ,EAAD,KAEE,kBAAC,EAAD,CAAgBX,SAAUA,KAE1B,MCXAgB,EAAoB,SAAAC,GACxB,IACE,IAAMC,EAAcD,EAAME,KAAKC,OAASH,EAAME,KAAKC,OAAOC,MAAQ,GAE5DC,EAAmBJ,EAAYK,QACnC,SAAArB,GAAO,MAAwC,aAApCA,EAAQE,KAAKC,OAAOmB,eAG3BC,EAAuBP,EAAYK,QACvC,SAAArB,GAAO,MAAwC,iBAApCA,EAAQE,KAAKC,OAAOmB,eAGjC,OACE,6BAEGF,EAAiBP,OAAS,GACzB,kBAAC,EAAD,CACEf,SAAUsB,EACVR,aAAa,aAIhBW,EAAqBV,OAAS,GAC7B,kBAAC,EAAD,CACEf,SAAUyB,EACVX,aAAa,kBAKrB,MAAOY,GAEP,OADAC,QAAQC,IAAIF,GACL,8DAYIG,UARM,SAAAZ,GACnB,OACE,kBAACa,EAAA,EAAD,KACE,kBAAC,EAAsBb","file":"component---src-pages-projects-js-4cd7623f841622c8fb8e.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\n// const DateSpan = styled.span`\n//   color: #999;\n//   margin-left: 0.5em;\n// `;\n\nconst StyledSectionHeading = styled.span`\n  margin-bottom: 0;\n  color: #000;\n  text-decoration: none;\n  letter-spacing: .07rem;\n  font-family: 'Archivo', sans-serif;\n  font-weight: bold;\n  display: block;\n\n  @media (min-width: 550px) {\n    display: inline;\n  }\n`;\n\nconst StyledProjectListing = styled.ul`\n  list-style: none;\n  margin-top: 0.5em;\n`;\n\nconst StyledProjectItem = styled.li`\n  font-size: 1.8rem;\n  // text-decoration: none;\n  margin-bottom: 0.5em;\n  line-height: 1.5em;\n  // display: inline-block;\n  // width: 33.3%;\n  // padding-right: 1em;\n  // display: flex;\n  // flex-wrap: nowrap;\n  // justify-content: space-between;\n`;\n\n// const StyledLinkWrap = styled.span`\n//   display: block;\n\n//   @media (min-width: 550px) {\n//     display: inline;\n//   }\n// `;\n\nconst StyledProjectLink = styled(Link)`\n  // display: inline-block;\n  // flex-grow: 0;\n`;\n\nconst StyledLedeSpan = styled.span`\n  font-style: italic;\n  // display: inline-block;\n  // flex-grow: 1;\n  // display: block;\n`;\n\nconst ProjectListing = ({ projects }) => {\n  const projectLinks = projects.map(project => {\n    return (\n      <StyledProjectItem key={project.node.fields.slug}>\n        <StyledSectionHeading>\n          <StyledProjectLink to={project.node.fields.slug}>\n            {project.node.frontmatter.title}\n          </StyledProjectLink>\n        </StyledSectionHeading>\n        {' / '}\n        {project.node.frontmatter.lede && (\n          <StyledLedeSpan>{project.node.frontmatter.lede}</StyledLedeSpan>\n        )}\n      </StyledProjectItem>\n    );\n  });\n\n  return <StyledProjectListing>{projectLinks}</StyledProjectListing>;\n};\n\nexport default ProjectListing;\n","import React from 'react';\nimport styled from 'styled-components';\nimport ProjectListing from './ProjectListing';\n\nconst StyledListingSection = styled.section`\n  margin-bottom: 2em;\n`;\n// const StyledSectionHeading = styled.h2`\n//   margin-bottom: 0;\n// `;\n\nconst ProjectListingSection = ({ projects, sectionTitle }) => {\n  return projects.length > 0 ? (\n    <StyledListingSection>\n      {/* <StyledSectionHeading>{sectionTitle}</StyledSectionHeading> */}\n      <ProjectListing projects={projects} />\n    </StyledListingSection>\n  ) : null;\n};\n\nexport default ProjectListingSection;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from './../components/Layout';\nimport ProjectListingSection from './../components/ProjectListingSection';\n\nconst ProjectsPageInner = props => {\n  try {\n    const allProjects = props.data.allMdx ? props.data.allMdx.edges : [];\n\n    const personalProjects = allProjects.filter(\n      project => project.node.fields.projectType === 'personal'\n    );\n\n    const professionalProjects = allProjects.filter(\n      project => project.node.fields.projectType === 'professional'\n    );\n\n    return (\n      <div>\n        {/* <h1>Projects</h1> */}\n        {personalProjects.length > 0 && (\n          <ProjectListingSection\n            projects={personalProjects}\n            sectionTitle=\"Personal\"\n          />\n        )}\n\n        {professionalProjects.length > 0 && (\n          <ProjectListingSection\n            projects={professionalProjects}\n            sectionTitle=\"Professional\"\n          />\n        )}\n      </div>\n    );\n  } catch (e) {\n    console.log(e);\n    return <h2>Unable to find any projects.</h2>;\n  }\n};\n\nconst ProjectsPage = props => {\n  return (\n    <Layout>\n      <ProjectsPageInner {...props} />\n    </Layout>\n  );\n};\n\nexport default ProjectsPage;\n\nexport const query = graphql`\n  query {\n    allMdx(\n      filter: {\n        frontmatter: { publish: { eq: true } }\n        fields: { type: { eq: \"project\" } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n            lede\n          }\n          fields {\n            slug\n            projectType\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}